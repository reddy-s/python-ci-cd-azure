name: $(Date:yyyyMMdd).$(Rev:.r)

pool:
  vmImage: 'Ubuntu 16.04'
variables:
  imageName: 'python-ci-cd-azure'
  major: 1
  minor: 0
  patch: $(Build.BuildId)

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: 3.6
    architecture: 'x64'

- script: |
    ls -ltrha && pip install --upgrade pip setuptools wheel unittest-xml-reporting
  displayName: 'Environment Preperation'

- script: |
    cd ./IntegrationPackage
    python -m xmlrunner discover
    cd ../
  displayName: 'Testing Integration Package'

- script: |
    cd ./IntegrationPackage
    python integration_setup.py sdist bdist_wheel
    cd ../
  displayName: 'Packaging Integration'

- script: |
    cd ./IntegrationPackage
    pip install dist/Integration-*3*.whl
    cd ../
  displayName: 'Installing Integration Package'

- script: |
    cd ./WrapperPackage
    python -m xmlrunner discover
    cd ../
  displayName: 'Testing Wrapper Package'

- script: |
    cd ./WrapperPackage
    python wrapper_setup.py sdist bdist_wheel
    cd ../
  displayName: 'Packaging Wrapper'

- task: PublishTestResults@2
  inputs:
    testResultsFiles: "**/TEST-*.xml"
    testRunTitle: 'Python $(PYTHON_VERSION)'

- script: |
    docker build -t $(dockerId)/$(imageName):$(major).$(minor).$(patch) .
  displayName: 'Build Docker image'

- script: |
    docker login -u $(dockerId) -p $pswd
    docker push $(dockerId)/$(imageName):$(major).$(minor).$(patch)
    docker tag $(dockerId)/$(imageName):$(major).$(minor).$(patch) $(dockerId)/$(imageName):latest
    docker push $(dockerId)/$(imageName):latest
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  env:
    pswd: $(dockerPassword)
  displayName: 'Push Docker image'

- script: |
    pip list
  displayName: 'Verification'
